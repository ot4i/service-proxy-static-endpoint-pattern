<c:if test="boolean($root/brokerSchema)" >
<%-- Tag exists --%>
<c:if test="string-length($root/brokerSchema) > 0">
<%-- and has a value--%>
BROKER SCHEMA <c:get select="$root/brokerSchema"/>
</c:if>
</c:if>
--  Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
--  $MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
--  $MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$

-- This uses a database node as it is (currently) the most
-- efficient way of making changes to the local environment
CREATE Database MODULE Initialise_Request_Parameters

	CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
		-- Set the operation name from the input context and the target provider address from the flow variable
		SET LocalEnvironment.Destination.SOAP.Request.Operation = Root.SOAP.Context.operation;
		SET LocalEnvironment.Variables.StatusCode = 1;
		RETURN true;
	END;
END MODULE;

-- This uses a database node as it is (currently) the most
-- efficient way of making changes to the local environment
CREATE Database Module SetReplyStatus

	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		-- When a reply has been received set status to 2 for log recording
		SET LocalEnvironment.Variables.StatusCode = 2;
		Return TRUE;
	END;
END MODULE;

-- This uses a database node as it is (currently) the most
-- efficient way of making changes to the local environment
CREATE Database Module SetFaultStatus

	CREATE FUNCTION Main () RETURNS BOOLEAN
	BEGIN
		-- When a fault is returned from the service call set status to -2 for log recording
		SET LocalEnvironment.Variables.StatusCode = -2;
		Return TRUE;
	END;
END MODULE;
