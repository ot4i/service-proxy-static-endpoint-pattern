<c:if test="boolean($root/brokerSchema)" >
<%-- Tag exists --%>
<c:if test="string-length($root/brokerSchema) > 0">
<%-- and has a value--%>
BROKER SCHEMA <c:get select="$root/brokerSchema"/>
</c:if>
</c:if>
--  Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
--  $MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
--  $MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$

DECLARE RequestLoggingOn EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn EXTERNAL BOOLEAN TRUE;
CREATE Filter MODULE CheckLogging

	CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
		IF LocalEnvironment.Variables.StatusCode = 1 
			THEN RETURN RequestLoggingOn;
		ELSE RETURN ResponseLoggingOn;
		END IF;
		END;
	END MODULE;	



	CREATE Compute MODULE CreateLogMessage
		CREATE FUNCTION main() RETURNS BOOLEAN
		BEGIN
			SET OutputRoot.Properties = NULL;
			CREATE FIRSTCHILD OF OutputRoot DOMAIN ('MQMD') NAME 'MQMD';
			DECLARE MQMDRef REFERENCE TO OutputRoot.MQMD;
			SET MQMDRef.Format = MQFMT_RF_HEADER_2;
			SET MQMDRef.Version = MQMD_CURRENT_VERSION;
			SET MQMDRef.CodedCharSetId = InputRoot.Properties.CodedCharSetId;
			SET MQMDRef.Encoding = InputRoot.Properties.Encoding;
			DECLARE OutRef REFERENCE TO OutputRoot;
			CREATE NEXTSIBLING OF MQMDRef AS OutRef DOMAIN('MQRFH2') NAME 'MQRFH2';
			SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = 2;
			SET OutRef.usr.BrokerName = SQL.BrokerName;
			Move OutRef TO OutRef.usr;
			SET OutRef.MessageFlowLabel = SQL.MessageFlowLabel;
			SET OutRef.DTSTAMP = CURRENT_TIMESTAMP;
			-- Add service information
			SET OutRef.StatusCode = InputLocalEnvironment.Variables.StatusCode;
			SET OutRef.ServiceName = InputRoot.SOAP.Context.service;
			SET OutRef.ServiceNameSpace = InputRoot.SOAP.Context.Namespace;
			SET OutRef.ServicePort = InputRoot.SOAP.Context.port;
			SET OutRef.ServicePortType = InputRoot.SOAP.Context.portType;
			SET OutRef.ServiceOperation = InputRoot.SOAP.Context.operation;
			SET OutRef.ServiceTargetEndpoint = Environment.PatternVariables.TargetEndpoint;
			SET OutRef.ServiceSOAPVersion = InputRoot.SOAP.Context.SOAP_Version;
			CREATE NEXTSIBLING OF OutputRoot.MQRFH2 DOMAIN('XMLNSC') NAME 'XMLNSC';
			-- Log SOAP data in XMLNSC body
			SET OutputRoot.XMLNSC.Message = InputBody;
		END;
	END MODULE;


	CREATE Compute MODULE CreateTraceData
		CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
			DECLARE EnvVarRef REFERENCE TO Environment.PatternVariables;	

			SET EnvVarRef.DTSTAMP = CURRENT_TIMESTAMP;
			SET EnvVarRef.BrokerName = SQL.BrokerName;
			SET EnvVarRef.MessageFlowlabel = SQL.MessageFlowLabel;
			SET EnvVarRef.Action = InputRoot.SOAP.Context.operation;
			-- Add service information
			SET EnvVarRef.Service.(XMLNSC.PCDataField)name = InputRoot.SOAP.Context.service;
			SET EnvVarRef.Service.nameSpace = InputRoot.SOAP.Context.Namespace;
			SET EnvVarRef.Service.(XMLNSC.PCDataField)port = InputRoot.SOAP.Context.port;
			SET EnvVarRef.Service.(XMLNSC.PCDataField)portType = InputRoot.SOAP.Context.portType;
			SET EnvVarRef.Service.(XMLNSC.PCDataField)operation = InputRoot.SOAP.Context.operation;
			SET EnvVarRef.Service.(XMLNSC.PCDataField)targetEndpoint = Environment.PatternVariables.TargetEndpoint;
			SET EnvVarRef.Service.(XMLNSC.PCDataField)SOAPVersion = InputRoot.SOAP.Context.SOAP_Version;

		END;
	END MODULE;